import pandas as pd
from sklearn.ensemble import GradientBoostingRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

file_path = 'TIRES.csv'
tire_data = pd.read_csv(file_path)

tire_data['Placement'] = tire_data['Placement'].ffill()
tire_data['Strategy Used'] = tire_data['Strategy Used'].ffill()
tire_data['Driver'] = tire_data['Driver'].astype('category').cat.codes
tire_data['Grand Prix'] = tire_data['Grand Prix'].astype('category').cat.codes
tire_data['Tyres'] = tire_data['Tyres'].astype('category').cat.codes
tire_data['Strategy Used'] = tire_data['Strategy Used'].astype('category').cat.codes

tire_data_cleaned = tire_data.drop(['From', 'To'], axis=1).iloc[:-3]

tire_data_cleaned['Placement'] = tire_data_cleaned['Placement'].str.extract('(\d+)')
tire_data_cleaned = tire_data_cleaned.dropna(subset=['Placement'])
tire_data_cleaned['Placement'] = tire_data_cleaned['Placement'].astype(int)

X = tire_data_cleaned.drop('Placement', axis=1)
y = tire_data_cleaned['Placement']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

gb_model = GradientBoostingRegressor(random_state=42)
gb_model.fit(X_train, y_train)

gb_predictions = gb_model.predict(X_test)
gb_mse = mean_squared_error(y_test, gb_predictions)

feature_importances = gb_model.feature_importances_
features = X.columns
importance_df = pd.DataFrame({'Feature': features, 'Importance': feature_importances}).sort_values(by='Importance', ascending=False)

print(f'Mean Squared Error: {gb_mse}')
print(importance_df)
